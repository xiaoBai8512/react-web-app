{"ast":null,"code":"import axios from 'axios'; // 创建一个 axios 实例\n\nconst service = axios.create({\n  baseURL: process.env.REACT_APP_BASE_URL,\n  // baseURL: '/api',\n  // withCredentials: true, // 跨域请求，允许保存cookie\n  timeout: 100000 // 请求超时时间\n\n}); // HTTPrequest拦截\n\nservice.interceptors.request.use(config => {\n  // const { userId, activationCode, latestOrderSn } =\n  const commonData = {\n    showapi_appid: '42222',\n    showapi_sign: '42932bad205a407a8429ba513cfbece1' // showapi_timestamp,\n    // showapi_res_gzip,\n\n  };\n  console.log(23, config);\n  let joinedCommonDataStr = '';\n\n  for (const prop in commonData) {\n    joinedCommonDataStr += `&${prop}=${commonData[prop]}`;\n  }\n\n  if (config.method === 'get') {\n    if (config.url.indexOf('?') > -1) {\n      config.url += joinedCommonDataStr;\n    } else {\n      config.url += '?' + joinedCommonDataStr.substr(1);\n    }\n\n    return config;\n  }\n\n  if (config.method === 'post') {\n    Object.assign(config.data, commonData);\n    return config;\n  }\n}, error => {\n  return Promise.reject(error);\n}); // HTTPresponse拦截\n\nservice.interceptors.response.use(data => {\n  // console.log('data', data)\n  let res = data.data;\n\n  if (res.status && res.status !== 'SUCCEED') {\n    let errMsg = res.errorMessage;\n\n    if (errMsg) {}\n  } // console.log('data', data)\n\n\n  return data;\n}, error => {\n  let errMsg;\n\n  if (error && error.response) {\n    if (error.response.data && error.response.data.status && error.response.data.status === 'FAILED') {\n      errMsg = error.response.data.errorMessage;\n    }\n\n    if (errMsg) {}\n  }\n\n  if (errMsg) {\n    error.message = errMsg;\n  }\n\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"sources":["E:/code/React/web-app/src/plugin/axios/index.js"],"names":["axios","service","create","baseURL","process","env","REACT_APP_BASE_URL","timeout","interceptors","request","use","config","commonData","showapi_appid","showapi_sign","console","log","joinedCommonDataStr","prop","method","url","indexOf","substr","Object","assign","data","error","Promise","reject","response","res","status","errMsg","errorMessage","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,kBADO;AAE5B;AACA;AACAC,EAAAA,OAAO,EAAE,MAJmB,CAIX;;AAJW,CAAb,CAAhB,C,CAOA;;AACAN,OAAO,CAACO,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CACEC,MAAD,IAAY;AACX;AAEA,QAAMC,UAAU,GAAG;AAClBC,IAAAA,aAAa,EAAE,OADG;AAElBC,IAAAA,YAAY,EAAE,kCAFI,CAGlB;AACA;;AAJkB,GAAnB;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAY,EAAZ,EAAgBL,MAAhB;AAEA,MAAIM,mBAAmB,GAAG,EAA1B;;AAEA,OAAK,MAAMC,IAAX,IAAmBN,UAAnB,EAA+B;AAC9BK,IAAAA,mBAAmB,IAAK,IAAGC,IAAK,IAAGN,UAAU,CAACM,IAAD,CAAO,EAApD;AACA;;AAED,MAAIP,MAAM,CAACQ,MAAP,KAAkB,KAAtB,EAA6B;AAC5B,QAAIR,MAAM,CAACS,GAAP,CAAWC,OAAX,CAAmB,GAAnB,IAA0B,CAAC,CAA/B,EAAkC;AACjCV,MAAAA,MAAM,CAACS,GAAP,IAAcH,mBAAd;AACA,KAFD,MAEO;AACNN,MAAAA,MAAM,CAACS,GAAP,IAAc,MAAMH,mBAAmB,CAACK,MAApB,CAA2B,CAA3B,CAApB;AACA;;AAED,WAAOX,MAAP;AACA;;AACD,MAAIA,MAAM,CAACQ,MAAP,KAAkB,MAAtB,EAA8B;AAC7BI,IAAAA,MAAM,CAACC,MAAP,CAAcb,MAAM,CAACc,IAArB,EAA2Bb,UAA3B;AACA,WAAOD,MAAP;AACA;AACD,CA/BF,EAiCEe,KAAD,IAAW;AACV,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACA,CAnCF,E,CAqCA;;AACAzB,OAAO,CAACO,YAAR,CAAqBqB,QAArB,CAA8BnB,GAA9B,CACEe,IAAD,IAAU;AACT;AACA,MAAIK,GAAG,GAAGL,IAAI,CAACA,IAAf;;AACA,MAAIK,GAAG,CAACC,MAAJ,IAAcD,GAAG,CAACC,MAAJ,KAAe,SAAjC,EAA4C;AAC3C,QAAIC,MAAM,GAAGF,GAAG,CAACG,YAAjB;;AACA,QAAID,MAAJ,EAAY,CACX;AACD,GAPQ,CAQT;;;AAEA,SAAOP,IAAP;AACA,CAZF,EAaEC,KAAD,IAAW;AACV,MAAIM,MAAJ;;AACA,MAAIN,KAAK,IAAIA,KAAK,CAACG,QAAnB,EAA6B;AAC5B,QACCH,KAAK,CAACG,QAAN,CAAeJ,IAAf,IACAC,KAAK,CAACG,QAAN,CAAeJ,IAAf,CAAoBM,MADpB,IAEAL,KAAK,CAACG,QAAN,CAAeJ,IAAf,CAAoBM,MAApB,KAA+B,QAHhC,EAIE;AACDC,MAAAA,MAAM,GAAGN,KAAK,CAACG,QAAN,CAAeJ,IAAf,CAAoBQ,YAA7B;AACA;;AACD,QAAID,MAAJ,EAAY,CACX;AACD;;AAED,MAAIA,MAAJ,EAAY;AACXN,IAAAA,KAAK,CAACQ,OAAN,GAAgBF,MAAhB;AACA;;AACD,SAAOL,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACA,CA/BF;AAiCA,eAAezB,OAAf","sourcesContent":["import axios from 'axios'\n\n// 创建一个 axios 实例\nconst service = axios.create({\n\tbaseURL: process.env.REACT_APP_BASE_URL,\n\t// baseURL: '/api',\n\t// withCredentials: true, // 跨域请求，允许保存cookie\n\ttimeout: 100000, // 请求超时时间\n})\n\n// HTTPrequest拦截\nservice.interceptors.request.use(\n\t(config) => {\n\t\t// const { userId, activationCode, latestOrderSn } =\n\n\t\tconst commonData = {\n\t\t\tshowapi_appid: '42222',\n\t\t\tshowapi_sign: '42932bad205a407a8429ba513cfbece1',\n\t\t\t// showapi_timestamp,\n\t\t\t// showapi_res_gzip,\n\t\t}\n\t\tconsole.log(23, config)\n\n\t\tlet joinedCommonDataStr = ''\n\n\t\tfor (const prop in commonData) {\n\t\t\tjoinedCommonDataStr += `&${prop}=${commonData[prop]}`\n\t\t}\n\n\t\tif (config.method === 'get') {\n\t\t\tif (config.url.indexOf('?') > -1) {\n\t\t\t\tconfig.url += joinedCommonDataStr\n\t\t\t} else {\n\t\t\t\tconfig.url += '?' + joinedCommonDataStr.substr(1)\n\t\t\t}\n\n\t\t\treturn config\n\t\t}\n\t\tif (config.method === 'post') {\n\t\t\tObject.assign(config.data, commonData)\n\t\t\treturn config\n\t\t}\n\t},\n\n\t(error) => {\n\t\treturn Promise.reject(error)\n\t},\n)\n// HTTPresponse拦截\nservice.interceptors.response.use(\n\t(data) => {\n\t\t// console.log('data', data)\n\t\tlet res = data.data\n\t\tif (res.status && res.status !== 'SUCCEED') {\n\t\t\tlet errMsg = res.errorMessage\n\t\t\tif (errMsg) {\n\t\t\t}\n\t\t}\n\t\t// console.log('data', data)\n\n\t\treturn data\n\t},\n\t(error) => {\n\t\tlet errMsg\n\t\tif (error && error.response) {\n\t\t\tif (\n\t\t\t\terror.response.data &&\n\t\t\t\terror.response.data.status &&\n\t\t\t\terror.response.data.status === 'FAILED'\n\t\t\t) {\n\t\t\t\terrMsg = error.response.data.errorMessage\n\t\t\t}\n\t\t\tif (errMsg) {\n\t\t\t}\n\t\t}\n\n\t\tif (errMsg) {\n\t\t\terror.message = errMsg\n\t\t}\n\t\treturn Promise.reject(error)\n\t},\n)\nexport default service\n"]},"metadata":{},"sourceType":"module"}